name: 服务器自用构建 - caddy-waf 测试分支

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'

env:
  DOCKER_IMAGE: juijote/caddy
  PLATFORMS: linux/amd64,linux/arm64,linux/arm/v7

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get latest Caddy version
        id: caddy-version
        run: |
          LATEST_VERSION=$(curl -s "https://api.github.com/repos/caddyserver/caddy/releases/latest" | jq -r ".tag_name")
          # 删除 'v' 前缀
          CADDY_VERSION=${LATEST_VERSION#v}
          echo "version=${CADDY_VERSION}" >> $GITHUB_OUTPUT
          echo "Latest Caddy version: ${CADDY_VERSION}"

      - name: Generate Dockerfile
        env:
          CADDY_VERSION: ${{ steps.caddy-version.outputs.version }}
        run: |
          cat > Dockerfile << EOF
          ARG CADDY_VERSION=${CADDY_VERSION}
          FROM caddy:\${CADDY_VERSION}-builder AS builder

          RUN apk add --no-cache git wget && \
                    go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest

          WORKDIR /app

          RUN git clone https://github.com/fabriziosalmi/caddy-waf.git

          WORKDIR /app/caddy-waf

          RUN go get -v github.com/caddyserver/caddy/v2 github.com/caddyserver/caddy/v2/caddyconfig/caddyfile github.com/caddyserver/caddy/v2/caddyconfig/httpcaddyfile github.com/caddyserver/caddy/v2 github.com/caddyserver/caddy/v2/modules/caddyhttp github.com/oschwald/maxminddb-golang github.com/fsnotify/fsnotify github.com/fabriziosalmi/caddy-waf && \

          RUN go mod tidy

          RUN wget https://git.io/GeoLite2-Country.mmdb

          RUN rm -rf buildenv_*

          RUN xcaddy build \
              --with github.com/caddy-dns/cloudflare \
              --with github.com/caddy-dns/dnspod \
              --with github.com/greenpau/caddy-security \
              --with github.com/mholt/caddy-ratelimit \
              --with github.com/corazawaf/coraza-caddy/v2 \
              --with github.com/fabriziosalmi/caddy-waf=./

          FROM caddy:\${CADDY_VERSION}
          
          WORKDIR /app
          
          COPY --from=builder /app/caddy-waf/caddy /usr/bin/caddy
          COPY --from=builder /app/caddy-waf/GeoLite2-Country.mmdb /app/
          COPY --from=builder /app/caddy-waf/rules.json /app/
          COPY --from=builder /app/caddy-waf/ip_blacklist.txt /app/
          COPY --from=builder /app/caddy-waf/dns_blacklist.txt /app/
          COPY Caddyfile /app/

          RUN addgroup -S caddy && adduser -S -G caddy caddy

          RUN chown -R caddy:caddy /app

          USER caddy

          EXPOSE 8080

          CMD ["caddy", "run", "--config", "/app/Caddyfile"]
          EOF

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ env.PLATFORMS }}
          push: true
          build-args: |
            CADDY_VERSION=${{ steps.caddy-version.outputs.version }}
          tags: |
            ${{ env.DOCKER_IMAGE }}:server-waf
            ${{ env.DOCKER_IMAGE }}:server-waf-${{ steps.caddy-version.outputs.version }}
